{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ESGF-QC","text":"<p>This project is a QC framework that extends the IOOS Compliance Checker. We forked the IOOS Compliance Checker and are developing our own plugins to support specific checks relevant to WCRP projects.</p>"},{"location":"#install","title":"\u2699\ufe0f Install","text":"<p>To get ESGF-QC up and running, follow these steps:</p> <pre><code>pip install git+[https://github.com/ESGF/esgf-qc.git@main]\n</code></pre> <p>And then install Esgvoc and universe to get the Controlled Vocabulary.</p> <pre><code>esgvoc config set universe:branch=esgvoc_dev\nesgvoc install\n</code></pre>"},{"location":"#running-the-esgf-qc","title":"\ud83d\ude80 Running the ESGF-QC","text":"<p>To run the ESGF-QC , use the following command:</p> <pre><code>esgqc --test=''check''  ''filepath'' \n</code></pre> <p>Example for WCRP CMIP6 plugin : </p> <pre><code>esgqc  --test=wcrp_cmip6:1.0  path/to/data/CMIP6/CMIP/IPSL/IPSL-CM5A2-INCA/historical/r1i1p1f1/Amon/pr/gr/v20240619/pr_Amon_IPSL-CM5A2-INCA_historical_r1i1p1f1_gr_185001-201412.nc\n</code></pre>"},{"location":"#quality-control-checks","title":"\ud83d\udcd6  Quality Control Checks","text":"<p>The checks are categorized into key areas, including : * Dimensional Integrity. Validation of dimensions like time, latitude, and longitude. * Metadata Validation: Ensuring attributes exist and comply with conventions and controlled vocabularies. * Temporal Consistency: Ensure different cheks in time. * Data Plausibility: Detecting outliers and ensuring values fall within expected ranges. * General Checks: Ensuring the overall structure, file integrity, and consistency between experiments.</p> <p>\ud83d\udd0e For a detailed account of the QC checks, we have compiled an inventory available in a Google Sheet. This document includes the categories, severity levels, and tools associated with each check. You can access the full inventory via the following link: \ud83d\udd17 https://docs.google.com/spreadsheets/d/15LytNx3qE7mvuCpyFYAsGFFKqzmm1MH_BoApoqbmLQk/edit?gid=1295657304#gid=1295657304</p>"},{"location":"#documentation","title":"\ud83d\udcd6  Documentation","text":""},{"location":"#contribution-guidelines","title":"\ud83e\udd1d Contribution Guidelines","text":"<p>When contributing to this project, please follow these guidelines:</p> <ul> <li>Check for Existing Implementations:<ul> <li>CF Convention: Check the google sheet table and identify the checks already covered by the CF plugin in the IOOS Compliance Checker. This will prevent us from duplicating effort and ensure consistency.</li> <li>IOOS CC Functions: Before implementing a new check, please review the existing functions in the IOOS compliance checker to see if there are any relevant functions that can be reused or adapted to avoid redundancy.</li> </ul> </li> <li>Error Handling: Use <code>try-except</code> blocks in your checks to handle potential errors gracefully and prevent the code from stopping unexpectedly.</li> <li>WCRP Plugins: The checks you develop will be called in the project specific scripts under WCRP directory. If you're confident in your understanding of the implementation, you can directly act on the designated script and add your check call, otherwise you can mention it in the pull request and we can assist you in plugging it in.</li> <li>Tests: For every new check file created, please add a corresponding test file in the <code>tests</code> directory to ensure the functionality and correctness of your checks.</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#running-the-esgf-qc","title":"\ud83d\ude80 Running the ESGF-QC","text":"<p>To run the ESGF-QC , use the following command:</p> <pre><code>esgqc --test=''check''  ''filepath'' \n</code></pre> <p>Example for WCRP CMIP6 plugin : </p> <pre><code>esgqc  --test=wcrp_cmip6:1.0  path/to/data/CMIP6/CMIP/IPSL/IPSL-CM5A2-INCA/historical/r1i1p1f1/Amon/pr/gr/v20240619/pr_Amon_IPSL-CM5A2-INCA_historical_r1i1p1f1_gr_185001-201412.nc\n</code></pre>"},{"location":"source/development/","title":"Developer Notes","text":""},{"location":"source/development/#pytest","title":"pytest","text":"<p>When running the python test suite, there may be test errors.  Certain tests <code>record</code> responses to remote queries for information.  If tests fail, they will appear to continue to fail as the queries are cached.</p> <p>To perform tests using fresh queries from remote services, use <code>pytest --disable-vcr</code>.  In certain cases, clearing the cache is also advised, use <code>pytest --clear-cache</code>.</p>"},{"location":"source/faq/","title":"Frequently Asked Questions","text":""},{"location":"source/faq/#what-is-the-compliance-checker","title":"What is the Compliance Checker?","text":"<p>The IOOS Compliance Checker is a Python-based tool for data providers to check for completeness and community standard compliance of local or remote netCDF files against CF and ACDD file standards. The Python module can be used as a command-line tool or as a library that can be integrated into other software.</p> <p>You are currently viewing the web-based version of the Compliance Checker. It was developed to enable a broader audience and improve accessibility for the checker. With the web version, providers can simply provide a link or upload their datasets and get the full suite of capabilities that Compliance Checker offers.</p>"},{"location":"source/faq/#what-does-the-compliance-checker-check","title":"What does the Compliance Checker check?","text":"<p>It currently supports the following sources and standards: - ACDD (1.1, 1.3) - CF (1.6, 1.7) - IOOS (1.1, 1.2) - Glider DAC - NCEI (1.1, 2.0)</p>"},{"location":"source/faq/#can-i-test-an-erddap-dataset-with-the-compliance-checker","title":"Can I test an ERDDAP dataset with the Compliance Checker?","text":"<p>Yes. When testing an ERDDAP dataset, please supply the URL to the dataset without a file extension. For example, to test this Morro Bay dataset, you should supply the URL like so: \"https://standards.sensors.ioos.us/erddap/tabledap/morro-bay-bs1-met\".</p>"},{"location":"source/faq/#what-version-of-the-compliance-checker-is-run-on-complianceioosus","title":"What version of the Compliance Checker is run on compliance.ioos.us?","text":"<p>This web site is using version 5.0.0 of the Compliance Checker.</p>"},{"location":"source/faq/#is-there-an-api","title":"Is there an API?","text":"<p>There sure is. Check out the details on how to use the web API here.</p>"},{"location":"source/faq/#where-can-i-find-more-information-about-the-compliance-checker","title":"Where can I find more information about the Compliance Checker?","text":"<p>The Compliance Checker is completely open-source and available on GitHub.</p>"},{"location":"source/faq/#disclaimer","title":"Disclaimer","text":"<p>The objective of the IOOS Compliance Checker is to check your file against our interpretation of select dataset metadata standards to use as a guideline in generating compliant files.  The compliance checker should not be considered the authoritative source on whether your file is 100% \"compliant\". Instead, we recommend that users use the results as a guide to work towards compliance.</p>"},{"location":"source/readme_link/","title":"Readme link","text":"<p><code>{include} ../../README.md</code></p>"}]}